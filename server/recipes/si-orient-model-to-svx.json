{
    "id": "271d9c8d-08af-45db-a940-3f0115d0ba00",
    "name": "si-orient-model-to-svx",
    "description": "Orients a model (obj, ply) to match the supplied .svx",
    "version": "2",
    "start": "log",

    "parameterSchema": {
        "type": "object",
        "properties": {
            "sourceMeshFile": {
                "type": "string",
                "minLength": 1,
                "format": "file"
            },
            "svxFile": {
                "type": "string",
                "minLength": 1,
                "format": "file"
            },
            "sourceMTLFile": {
                "type": "string",
                "minLength": 1,
                "format": "file"
            },
            "sourceDiffuseMapFile": {
                "type": "string",
                "minLength": 1,
                "format": "file"
            },
            "outputFileBaseName": {
                "type": "string",
                "minLength": 1
            }
        },
        "required": [
            "sourceMeshFile",
            "svxFile"
        ],
        "additionalProperties": false
    },

    "steps": {
        "log": {
            "task": "Log",
            "description": "Enable logging services",
            "pre": {
                "baseName": "$baseName($firstTrue(outputFileBaseName, sourceMeshFile))",
                "baseMeshName": "$baseMeshName($firstTrue(outputFileBaseName, sourceMeshFile))"
            },
            "parameters": {
                "logToConsole": true,
                "reportFile": "baseMeshName & '-reorient-report.json'"
            },
            "success": "'pickup'",
            "failure": "$failure"
        },
        "pickup": {
            "task": "Pickup",
            "description": "Fetch input files from client",
            "pre": {
                "baseName": "$baseName($firstTrue(outputFileBaseName, sourceMeshFile))"
            },
            "parameters": {
                "method": "transportMethod",
                "path": "$firstTrue(pickupPath, $currentDir)",
                "files": {
                    "inputMeshFile": "sourceMeshFile",
                    "inputVoyagerFile": "svxFile",
                    "inputMTLFile": "sourceMTLFile",
                    "highPolyDiffuseMapFile": "sourceDiffuseMapFile"
                }
            },
            "success": "'reorient'",
            "failure": "$failure"
        },
        "reorient": {
            "task": "ReorientMesh",
            "description": "Reorient mesh to match Voyager orientation",
            "pre": {
                "deliverables": {
                    "reorientedMeshFile": "$firstTrue(outputMeshFile, outputFileBaseName & '_oriented' & $extName(sourceMeshFile))"
                }
            },
            "parameters": {
                "inputMeshFile": "sourceMeshFile",
                "inputVoyagerFile": "svxFile",
                "outputMeshFile": "deliverables.reorientedMeshFile"
            },
            "success": "'delivery'",
            "failure": "$failure"
        },
        "delivery": {
            "task": "Delivery",
            "description": "Send result files back to client",
            "parameters": {
                "method": "transportMethod",
                "path": "$firstTrue(deliveryPath, pickupPath, $currentDir)",
                "files": "deliverables"
            },
            "success": "$success",
            "failure": "$failure"
        }
    }
}